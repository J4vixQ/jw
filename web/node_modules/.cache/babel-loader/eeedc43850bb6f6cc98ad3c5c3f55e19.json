{"ast":null,"code":"import { mapMutations } from 'vuex';\nexport default {\n  methods: {\n    ...mapMutations(['setinfo']),\n    tologin() {\n      this.$refs.formBox.style.transform = 'translateX(0%)';\n      this.$refs.registerBox.classList.add('hidden');\n      this.$refs.loginBox.classList.remove('hidden');\n    },\n    toregister() {\n      this.$refs.formBox.style.transform = 'translateX(80%)';\n      this.$refs.loginBox.classList.add('hidden');\n      this.$refs.registerBox.classList.remove('hidden');\n    },\n    async login() {\n      // 收集填写的表单信息\n      const child = this.$refs.loginBox.children;\n      const id = child[1].value;\n      const password = child[2].value;\n\n      // 发送post请求\n      const {\n        data\n      } = await this.$http({\n        method: 'POST',\n        url: '/login',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        data: {\n          username: id,\n          password\n        }\n      });\n\n      // 展示后端的处理结果\n      const {\n        status,\n        msg,\n        token,\n        result\n      } = data;\n      alert(msg);\n      if (status === 200) {\n        // 本地存储登录成功的token以及账号信息\n        localStorage.setItem('token', token);\n        localStorage.setItem('id', result.id);\n        this.setinfo(result);\n\n        // 判断是否为管理员账号, 管理员则跳转至后台主界面, 普通用户则跳转至购物主界面\n        if (result.id === 0) this.$router.replace('/management');else this.$router.replace('/');\n      }\n    },\n    async register() {\n      // 收集填写的表单信息\n      const child = this.$refs.registerBox.children;\n      const username = child[1].value;\n      const email = child[2].value;\n      const password = child[3].value;\n      const again = child[4].value;\n\n      // 进行简单信息校验\n      if (password !== again) {\n        alert('两次输入的密码不一致');\n        return;\n      }\n      if (username.length <= 3 || username.length >= 12) {\n        alert('用户名的长度应为3-12位');\n        return;\n      }\n      if (email.indexOf('@') === -1) {\n        alert('输入的邮箱非法');\n        return;\n      }\n      if (password.length < 6 || password.length > 16) {\n        alert('密码的长度应为6-16位');\n        return;\n      }\n\n      // 发送post请求\n      const {\n        data\n      } = await this.$http({\n        method: 'POST',\n        url: '/register',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        data: {\n          username,\n          email,\n          password\n        }\n      });\n\n      // 展示后端的处理结果\n      if (data.status === 200) {\n        alert('注册成功,您的账号为' + data.account);\n        for (let i = 1; i <= 4; i++) {\n          child[i].value = '';\n        }\n      } else {\n        alert(data.msg);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAsCA;AACA;EACAA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;MACA;MACA;MACA;MACA;;MAEA;MACA;QAAAC;MAAA;QACAC;QACAC;QACAC;UACAC;QACA;QACAJ;UACAK;UAAAC;QACA;MACA;;MAEA;MACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;MACAC;MACA;QACA;QACAC;QACAA;QACA;;QAEA;QACA,8DACA;MACA;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;QACAD;QACA;MACA;MACA;QACAA;QACA;MACA;MACA;QACAA;QACA;MACA;MACA;QACAA;QACA;MACA;;MAEA;MACA;QAAAX;MAAA;QACAC;QACAC;QACAC;UACAC;QACA;QACAJ;UACAK;UAAAQ;UAAAP;QACA;MACA;;MAEA;MACA;QACAK;QACA;UACAG;QACA;MACA;QACAH;MACA;IACA;EACA;AACA","names":["methods","tologin","toregister","data","method","url","headers","Authorization","username","password","status","msg","token","result","alert","localStorage","email","child"],"sourceRoot":"src/views","sources":["AboutLogin.vue"],"sourcesContent":["<template>\n  <div class=\"super\">\n    <div class=\"container\">\n      <div class=\"form-box\" ref=\"formBox\">\n        <div class=\"register-box hidden\" ref=\"registerBox\">\n          <h1>register</h1>\n          <input type=\"text\" placeholder=\"用户名\">\n          <input type=\"email\" placeholder=\"邮箱\">\n          <input type=\"password\" placeholder=\"密码\">\n          <input type=\"password\" placeholder=\"确认密码\">\n          <button @click=\"register\">注册</button>\n        </div>\n        <div class=\"login-box\" ref=\"loginBox\">\n          <h1>login</h1>\n          <input type=\"text\" placeholder=\"账号\">\n          <input type=\"password\" placeholder=\"密码\">\n          <button @click=\"login\">登录</button>\n        </div>\n      </div>\n      <div class=\"con-box left\">\n        <h2>欢迎来到购物之家</h2>\n        <p>hello</p>\n        <img src=\"../assets/login.png\" alt=\"\">\n        <p>已有账号</p>\n        <button id=\"login\" @click=\"tologin\">去登录</button>\n      </div>\n      <div class=\"con-box right\">\n        <h2>欢迎来到购物之家</h2>\n        <p>hello</p>\n        <img src=\"../assets/login.png\" alt=\"\">\n        <p>没有账号?</p>\n        <button id=\"register\" @click=\"toregister\">去注册</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from 'vuex'\nexport default {\n  methods: {\n    ...mapMutations(['setinfo']),\n    tologin() {\n      this.$refs.formBox.style.transform = 'translateX(0%)'\n      this.$refs.registerBox.classList.add('hidden')\n      this.$refs.loginBox.classList.remove('hidden')\n    },\n    toregister() {\n      this.$refs.formBox.style.transform = 'translateX(80%)'\n      this.$refs.loginBox.classList.add('hidden')\n      this.$refs.registerBox.classList.remove('hidden')\n    },\n    async login() {\n      // 收集填写的表单信息\n      const child = this.$refs.loginBox.children\n      const id = child[1].value\n      const password = child[2].value\n\n      // 发送post请求\n      const { data } = await this.$http({\n        method: 'POST',\n        url: '/login',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        data: {\n          username: id, password\n        }\n      })\n\n      // 展示后端的处理结果\n      const { status, msg, token, result } = data\n      alert(msg)\n      if (status === 200) {\n        // 本地存储登录成功的token以及账号信息\n        localStorage.setItem('token', token)\n        localStorage.setItem('id', result.id)\n        this.setinfo(result)\n\n        // 判断是否为管理员账号, 管理员则跳转至后台主界面, 普通用户则跳转至购物主界面\n        if (result.id === 0) this.$router.replace('/management')\n        else this.$router.replace('/')\n      }\n    },\n    async register() {\n      // 收集填写的表单信息\n      const child = this.$refs.registerBox.children\n      const username = child[1].value\n      const email = child[2].value\n      const password = child[3].value\n      const again = child[4].value\n\n      // 进行简单信息校验\n      if (password !== again) {\n        alert('两次输入的密码不一致')\n        return\n      }\n      if (username.length <= 3 || username.length >= 12) {\n        alert('用户名的长度应为3-12位')\n        return\n      }\n      if (email.indexOf('@') === -1) {\n        alert('输入的邮箱非法')\n        return\n      }\n      if (password.length < 6 || password.length > 16) {\n        alert('密码的长度应为6-16位')\n        return\n      }\n\n      // 发送post请求\n      const { data } = await this.$http({\n        method: 'POST',\n        url: '/register',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        data: {\n          username, email, password\n        }\n      })\n\n      // 展示后端的处理结果\n      if (data.status === 200) {\n        alert('注册成功,您的账号为' + data.account)\n        for (let i = 1; i <= 4; i++) {\n          child[i].value = ''\n        }\n      } else {\n        alert(data.msg)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.super {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(200deg, #f3e7e9, #e3eeff);\n}\n\n.container {\n  background-color: #fff;\n  width: 650px;\n  height: 415px;\n  border-radius: 5px;\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n\n.form-box {\n  position: absolute;\n  top: -10%;\n  left: 5%;\n  background-color: #d3b7d8;\n  width: 320px;\n  height: 500px;\n  border-radius: 5px;\n  box-sizing: 2px 0 10px rgba(0, 0, 0, .1);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n  transition: .5s ease-in-out;\n}\n\n.register-box,\n.login-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.hidden {\n  display: none;\n  transition: .5s;\n}\n\nh1 {\n  text-align: center;\n  margin-bottom: 25px;\n  text-transform: uppercase;\n  color: #fff;\n  letter-spacing: 5px;\n}\n\ninput {\n  background-color: transparent;\n  width: 70%;\n  color: #fff;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, .4);\n  padding: 10px 0;\n  text-indent: 10px;\n  margin: 8px 0;\n  font-size: 14px;\n  letter-spacing: 2px;\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &:focus {\n    color: #a262ad;\n    outline: none;\n    border-bottom: 1px solid #a262ad;\n    transition: .5s;\n  }\n}\n\n.form-box button {\n  width: 70%;\n  margin-top: 35px;\n  background-color: #f6f6f6;\n  outline: none;\n  border-radius: 8px;\n  padding: 13px;\n  color: #a262ad;\n  letter-spacing: 2px;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #a262ad;\n    color: #f6f6f6;\n    transition: background-color 0.5 ease;\n  }\n}\n\n.con-box {\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.con-box.left {\n  left: -2%;\n}\n\n.con-box.right {\n  right: -2%;\n}\n\n.con-box {\n  h2 {\n    color: #8e9aaf;\n    font-size: 25px;\n    font-weight: bold;\n    letter-spacing: 3px;\n    text-align: center;\n    margin-bottom: 4px;\n  }\n\n  p {\n    font-size: 12px;\n    letter-spacing: 2px;\n    color: #8e9aaf;\n    text-align: center;\n  }\n\n  span {\n    color: #d3b7d8;\n  }\n\n  img {\n    width: 150px;\n    height: 150px;\n    opacity: .9;\n    margin: 40px 0;\n  }\n\n  button {\n    margin-top: 3%;\n    background-color: #fff;\n    color: #a262ad;\n    border: 1px solid #d3b7d8;\n    padding: 6px 10px;\n    border-radius: 5px;\n    letter-spacing: 1px;\n    outline: none;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #d3b7d8;\n      color: #fff;\n    }\n  }\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}