{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations, mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      formInline: {\n        user: ''\n      },\n      targetInfo: [],\n      rules: {\n        user: [{\n          required: true,\n          message: '请输入商品编号',\n          trigger: 'blur'\n        }, {\n          type: 'integer',\n          min: 0,\n          message: '商品编号应大于 0 且为整数',\n          trigger: 'blur'\n        }]\n      },\n      ruleForm: {\n        name: '',\n        store: '',\n        selling: false,\n        sold: '',\n        price: '',\n        desc: ''\n      },\n      rules_plus: {\n        name: [{\n          required: true,\n          message: '请输入商品编号',\n          trigger: 'blur'\n        }, {\n          type: 'integer',\n          min: 0,\n          message: '商品编号应大于 0 且为整数 ',\n          trigger: 'blur'\n        }],\n        store: [{\n          required: true,\n          message: '请输入商品存货量',\n          trigger: 'blur'\n        }, {\n          type: 'integer',\n          min: 0,\n          max: 999999,\n          message: '存货量在 0 到 999999 之间且为整数',\n          trigger: 'blur'\n        }],\n        sold: [{\n          required: true,\n          message: '请输入商品销售量',\n          trigger: 'blur'\n        }, {\n          type: 'integer',\n          min: 0,\n          max: 999999,\n          message: '销售量在 0 到 999999 之间且为整数',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请输入商品价格',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          min: 0,\n          max: 999999,\n          message: '价格在 0 到 999999 之间',\n          trigger: 'blur'\n        }],\n        desc: [{\n          required: true,\n          message: '请填写商品描述',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 40,\n          message: '长度在 3 到 40 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapState(['goods'])\n  },\n  methods: {\n    ...mapMutations(['setgoods']),\n    onSubmit() {\n      // 遍历整个商品对象数组，逐个查找\n      for (const k in this.goods) {\n        if (this.goods[k].goodsname === this.formInline.user) {\n          this.targetInfo = [this.goods[k]];\n          this.ruleForm = {\n            name: this.goods[k].goodsname,\n            store: this.goods[k].store_num,\n            selling: this.goods[k].selling === 1,\n            sold: this.goods[k].sold_num,\n            price: this.goods[k].price,\n            desc: this.goods[k].description\n          };\n          return;\n        }\n      }\n      alert('不存在该商品编号对应的商品,请输入正确的商品编号');\n    },\n    submitAdd(formName) {\n      // 将填写的所有信息根据上述规则进行严格校验\n      this.$refs[formName].validate(async valid => {\n        // 校验通过\n        if (valid) {\n          const file = document.querySelector('.el-upload__input').files[0];\n          const fd = new FormData();\n          fd.append('goodsname', this.ruleForm.name);\n          fd.append('description', this.ruleForm.desc);\n          fd.append('price', this.ruleForm.price);\n          fd.append('store_num', this.ruleForm.store);\n          fd.append('sold_num', this.ruleForm.sold);\n          fd.append('selling', this.ruleForm.selling ? 1 : 0);\n          // 判断是否需要更新图片\n          if (file) {\n            fd.append('file', file);\n          }\n          // 发送post请求\n          const {\n            data\n          } = await this.$http({\n            method: 'POST',\n            url: '/update',\n            headers: {\n              Authorization: localStorage.getItem('token')\n            },\n            data: fd,\n            processData: false,\n            contentType: false\n          });\n          // 展示结果\n          alert(data.msg);\n          if (data.status === 200) {\n            // 更新成功后，获取最新的商品信息\n            this.targetInfo = [];\n            this.formInline.user = '';\n            const {\n              data\n            } = await this.$http({\n              method: 'get',\n              headers: {\n                Authorization: localStorage.getItem('token')\n              },\n              url: '/getfullgoods'\n            });\n            if (data.status === 200) {\n              this.setgoods(data.goods);\n            }\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.ruleForm = {\n        name: '',\n        store: '',\n        selling: false,\n        sold: '',\n        price: '',\n        desc: ''\n      };\n    },\n    handleExceed(files, fileList) {\n      this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\n    },\n    solve(val) {\n      const arr = [];\n      for (let i = 0; i < this.targetInfo.length; i++) {\n        const obj = {};\n        for (const k in val[i]) {\n          obj[k] = val[i][k];\n        }\n        obj.selling = obj.selling === 1;\n        arr.push(obj);\n      }\n      return arr;\n    }\n  }\n};","map":{"version":3,"mappings":";AA6FA;AACA;EACAA;IACA;MACAC;QACAC;MACA;MACAC;MACAC;QACAF,OACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;MACAG;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAN,OACA;UAAAN;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAK,QACA;UAAAP;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAS;UAAAZ;UAAAC;QAAA,EACA;QACAO,OACA;UAAAT;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAS;UAAAZ;UAAAC;QAAA,EACA;QACAQ,QACA;UAAAV;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAS;UAAAZ;UAAAC;QAAA,EACA;QACAS,OACA;UAAAX;UAAAC;UAAAC;QAAA,GACA;UAAAE;UAAAS;UAAAZ;UAAAC;QAAA;MAEA;IACA;EACA;EACAY;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;QACA;UACA;UACA;YACAV;YACAC;YACAC;YACAC;YACAC;YACAC;UACA;UACA;QACA;MACA;MACAM;IACA;IACAC;MACA;MACA;QACA;QACA;UACA;UACA;UACAC;UACAA;UACAA;UACAA;UACAA;UACAA;UACA;UACA;YACAA;UACA;UACA;UACA;YAAAxB;UAAA;YACAyB;YACAC;YACAC;cACAC;YACA;YACA5B;YACA6B;YACAC;UACA;UACA;UACAR;UACA;YACA;YACA;YACA;YACA;cAAAtB;YAAA;cACAyB;cACAE;gBACAC;cACA;cACAF;YACA;YACA;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAK;MACA;QACApB;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IACAgB;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;UACAC;QACA;QACAA;QACAC;MACA;MACA;IACA;EACA;AACA","names":["data","formInline","user","targetInfo","rules","required","message","trigger","type","min","ruleForm","name","store","selling","sold","price","desc","rules_plus","max","computed","methods","onSubmit","alert","submitAdd","fd","method","url","headers","Authorization","processData","contentType","resetForm","handleExceed","solve","obj","arr"],"sourceRoot":"src/components","sources":["UpdateGoods.vue"],"sourcesContent":["<template>\n  <div class=\"update\">\n    <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\" :rules=\"rules\">\n      <el-form-item label=\"需要修改的商品\" prop=\"user\">\n        <el-input v-model.number=\"formInline.user\" placeholder=\"商品编号\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\n      </el-form-item>\n    </el-form>\n\n    <div class=\"data\" v-if=\"targetInfo.length > 0\">\n      <el-table :data=\"solve(targetInfo)\" style=\"width: 100%\">\n        <el-table-column label=\"商品编号\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.goodsname }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"商品描述\" width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.description }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"商品图片\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <img :src=\"'http://127.0.0.1/goods/' + scope.row.goodsname + '.png'\" alt=\"\"\n              style=\"width:150px;border-radius: 10px;\">\n          </template>\n        </el-table-column>\n        <el-table-column label=\"价格\">\n          <template slot-scope=\"scope\">\n            ¥{{ scope.row.price }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"存货量\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.store_num }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"销售量\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.sold_num }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"是否在售\">\n          <template slot-scope=\"scope\">\n            <el-switch v-model=\"scope.row.selling\" active-color=\"#13ce66\" inactive-color=\"#ff4949\" disabled>\n            </el-switch>\n          </template>\n        </el-table-column>\n        <slot></slot>\n      </el-table>\n    </div>\n\n    <div class=\"add\" v-if=\"targetInfo.length > 0\">\n      <el-form :model=\"ruleForm\" :rules=\"rules_plus\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"商品编号\" prop=\"name\" label-width=\"100px\">\n          <el-input v-model.number=\"ruleForm.name\" style=\"width: 50%\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品描述\" prop=\"desc\">\n          <el-input type=\"textarea\" style=\"width: 70%\" v-model=\"ruleForm.desc\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品图片\" prop=\"pic\">\n          <el-upload class=\"upload-demo\" ref=\"upload\" action=\"http://127.0.0.1/api\" :auto-upload=\"false\" accept=\".png\"\n            :limit=\"1\" :on-exceed=\"handleExceed\">\n            <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传png文件,且不超过500kb,推荐图片宽高比为1:1</div>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"商品价格\" prop=\"price\">\n          ¥&nbsp;&nbsp;<el-input v-model.number=\"ruleForm.price\" style=\"width: 100px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品存货量\" prop=\"store\">\n          <el-input v-model.number=\"ruleForm.store\" style=\"width: 100px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品销售量\" prop=\"sold\">\n          <el-input v-model.number=\"ruleForm.sold\" style=\"width: 100px\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"是否在售\" prop=\"selling\">\n          <el-switch v-model=\"ruleForm.selling\"></el-switch>\n        </el-form-item>\n        <el-form-item>\n          <slot>\n            <el-button type=\"primary\" @click=\"submitAdd('ruleForm')\">确认修改</el-button>\n          </slot>\n          <el-button @click=\"resetForm('ruleForm')\" style=\"margin-left: 100px;\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapState } from 'vuex'\nexport default {\n  data() {\n    return {\n      formInline: {\n        user: ''\n      },\n      targetInfo: [],\n      rules: {\n        user: [\n          { required: true, message: '请输入商品编号', trigger: 'blur' },\n          { type: 'integer', min: 0, message: '商品编号应大于 0 且为整数', trigger: 'blur' }\n        ]\n      },\n      ruleForm: {\n        name: '',\n        store: '',\n        selling: false,\n        sold: '',\n        price: '',\n        desc: ''\n      },\n      rules_plus: {\n        name: [\n          { required: true, message: '请输入商品编号', trigger: 'blur' },\n          { type: 'integer', min: 0, message: '商品编号应大于 0 且为整数 ', trigger: 'blur' }\n        ],\n        store: [\n          { required: true, message: '请输入商品存货量', trigger: 'blur' },\n          { type: 'integer', min: 0, max: 999999, message: '存货量在 0 到 999999 之间且为整数', trigger: 'blur' }\n        ],\n        sold: [\n          { required: true, message: '请输入商品销售量', trigger: 'blur' },\n          { type: 'integer', min: 0, max: 999999, message: '销售量在 0 到 999999 之间且为整数', trigger: 'blur' }\n        ],\n        price: [\n          { required: true, message: '请输入商品价格', trigger: 'blur' },\n          { type: 'number', min: 0, max: 999999, message: '价格在 0 到 999999 之间', trigger: 'blur' }\n        ],\n        desc: [\n          { required: true, message: '请填写商品描述', trigger: 'blur' },\n          { min: 3, max: 40, message: '长度在 3 到 40 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapState(['goods'])\n  },\n  methods: {\n    ...mapMutations(['setgoods']),\n    onSubmit() {\n      // 遍历整个商品对象数组，逐个查找\n      for (const k in this.goods) {\n        if (this.goods[k].goodsname === this.formInline.user) {\n          this.targetInfo = [this.goods[k]]\n          this.ruleForm = {\n            name: this.goods[k].goodsname,\n            store: this.goods[k].store_num,\n            selling: this.goods[k].selling === 1,\n            sold: this.goods[k].sold_num,\n            price: this.goods[k].price,\n            desc: this.goods[k].description\n          }\n          return\n        }\n      }\n      alert('不存在该商品编号对应的商品,请输入正确的商品编号')\n    },\n    submitAdd(formName) {\n      // 将填写的所有信息根据上述规则进行严格校验\n      this.$refs[formName].validate(async (valid) => {\n        // 校验通过\n        if (valid) {\n          const file = document.querySelector('.el-upload__input').files[0]\n          const fd = new FormData()\n          fd.append('goodsname', this.ruleForm.name)\n          fd.append('description', this.ruleForm.desc)\n          fd.append('price', this.ruleForm.price)\n          fd.append('store_num', this.ruleForm.store)\n          fd.append('sold_num', this.ruleForm.sold)\n          fd.append('selling', this.ruleForm.selling ? 1 : 0)\n          // 判断是否需要更新图片\n          if (file) {\n            fd.append('file', file)\n          }\n          // 发送post请求\n          const { data } = await this.$http({\n            method: 'POST',\n            url: '/update',\n            headers: {\n              Authorization: localStorage.getItem('token')\n            },\n            data: fd,\n            processData: false,\n            contentType: false\n          })\n          // 展示结果\n          alert(data.msg)\n          if (data.status === 200) {\n            // 更新成功后，获取最新的商品信息\n            this.targetInfo = []\n            this.formInline.user = ''\n            const { data } = await this.$http({\n              method: 'get',\n              headers: {\n                Authorization: localStorage.getItem('token')\n              },\n              url: '/getfullgoods'\n            })\n            if (data.status === 200) {\n              this.setgoods(data.goods)\n            }\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm(formName) {\n      this.ruleForm = {\n        name: '',\n        store: '',\n        selling: false,\n        sold: '',\n        price: '',\n        desc: ''\n      }\n    },\n    handleExceed(files, fileList) {\n      this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`)\n    },\n    solve(val) {\n      const arr = []\n      for (let i = 0; i < this.targetInfo.length; i++) {\n        const obj = {}\n        for (const k in val[i]) {\n          obj[k] = val[i][k]\n        }\n        obj.selling = obj.selling === 1\n        arr.push(obj)\n      }\n      return arr\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.update {\n  margin: 0 5%;\n\n  .demo-form-inline {\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  .add {\n    margin-top: 20px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}