{"ast":null,"code":"import * as echarts from 'echarts';\nimport { mapState } from 'vuex';\nexport default {\n  mounted() {\n    const x = ['', '', '', '', ''];\n    const y = [0, 0, 0, 0, 0];\n    const y1 = [0, 0, 0, 0, 0];\n    for (let i = (this.currentPage - 1) * this.pageSize, j = 0; i < Math.min(this.currentPage * this.pageSize, this.goods.length); i++, j++) {\n      x[j] = this.goods[i].goodsname;\n      y[j] = this.goods[i].sold_num;\n      y1[j] = (this.goods[i].sold_num * this.goods[i].price).toFixed(2);\n    }\n    this.option.xAxis.data = x;\n    this.option1.xAxis.data = x;\n    this.option.series[0].data = y;\n    this.option1.series[0].data = y1;\n    const myChart = echarts.init(document.querySelector('.chart'));\n    myChart.setOption(this.option);\n    const myChart1 = echarts.init(document.querySelector('.profit'));\n    myChart1.setOption(this.option1);\n  },\n  computed: {\n    ...mapState(['goods'])\n  },\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 5,\n      option: {\n        tooltip: {},\n        xAxis: {\n          data: ['A', 'B', 'C', 'D', 'E'],\n          name: '商品编号'\n        },\n        yAxis: {\n          name: '销售量'\n        },\n        series: [{\n          name: '销售量',\n          data: [0, 0, 0, 0, 0],\n          type: 'bar',\n          itemStyle: {\n            color: '#91cc75',\n            shadowColor: '#91cc75',\n            opacity: 0.5\n          }\n        }]\n      },\n      option1: {\n        tooltip: {},\n        xAxis: {\n          data: ['A', 'B', 'C', 'D', 'E'],\n          name: '商品编号'\n        },\n        yAxis: {\n          name: '营业额/元'\n        },\n        series: [{\n          name: '营业额',\n          data: [0, 0, 0, 0, 0],\n          type: 'bar',\n          itemStyle: {\n            color: 'rgb(84,112,198)',\n            shadowColor: '#91cc75',\n            opacity: 0.5\n          }\n        }]\n      }\n    };\n  },\n  methods: {\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      const x = ['', '', '', '', ''];\n      const y = [0, 0, 0, 0, 0];\n      const y1 = [0, 0, 0, 0, 0];\n      // 在goods数组中截取目标下标范围内的表格信息\n      for (let i = (this.currentPage - 1) * this.pageSize, j = 0; i < Math.min(this.currentPage * this.pageSize, this.goods.length); i++, j++) {\n        x[j] = this.goods[i].goodsname;\n        y[j] = this.goods[i].sold_num;\n        y1[j] = (this.goods[i].sold_num * this.goods[i].price).toFixed(2);\n      }\n      this.option.xAxis.data = x;\n      this.option1.xAxis.data = x;\n      this.option.series[0].data = y;\n      this.option1.series[0].data = y1;\n      // 重新渲染chart\n      const myChart = echarts.init(document.querySelector('.chart'));\n      myChart.setOption(this.option);\n      const myChart1 = echarts.init(document.querySelector('.profit'));\n      myChart1.setOption(this.option1);\n    }\n  }\n};","map":{"version":3,"mappings":"AAaA;AACA;AACA;EACAA;IACA;IACA;IACA;IACA;MACAC;MACAC;MACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;IACA;IACAC;EACA;EACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;UACAL;UACAM;QACA;QACAC;UACAD;QACA;QACAE,SACA;UACAF;UACAN;UACAS;UACAC;YACAC;YACAC;YACAC;UACA;QACA;MAEA;MACAC;QACAV;QACAC;UACAL;UACAM;QACA;QACAC;UACAD;QACA;QACAE,SACA;UACAF;UACAN;UACAS;UACAC;YACAC;YACAC;YACAC;UACA;QACA;MAEA;IACA;EACA;EACAE;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACAtB;QACAC;QACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC;MACA;MACAC;IACA;EACA;AACA","names":["mounted","x","y","y1","myChart","myChart1","computed","data","currentPage","pageSize","option","tooltip","xAxis","name","yAxis","series","type","itemStyle","color","shadowColor","opacity","option1","methods","handleCurrentChange"],"sourceRoot":"src/components","sources":["DataChart.vue"],"sourcesContent":["<template>\n  <div class=\"dataChart\">\n    <div class=\"block\">\n      <el-pagination @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage\" :page-size=\"pageSize\"\n        layout=\"prev, pager, next, jumper\" :total=\"goods.length\">\n      </el-pagination>\n    </div>\n    <div class=\"chart\"></div>\n    <div class=\"profit\"></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport { mapState } from 'vuex'\nexport default {\n  mounted() {\n    const x = ['', '', '', '', '']\n    const y = [0, 0, 0, 0, 0]\n    const y1 = [0, 0, 0, 0, 0]\n    for (let i = (this.currentPage - 1) * this.pageSize, j = 0; i < Math.min(this.currentPage * this.pageSize, this.goods.length); i++, j++) {\n      x[j] = this.goods[i].goodsname\n      y[j] = this.goods[i].sold_num\n      y1[j] = (this.goods[i].sold_num * this.goods[i].price).toFixed(2)\n    }\n    this.option.xAxis.data = x\n    this.option1.xAxis.data = x\n    this.option.series[0].data = y\n    this.option1.series[0].data = y1\n    const myChart = echarts.init(document.querySelector('.chart'))\n    myChart.setOption(this.option)\n    const myChart1 = echarts.init(document.querySelector('.profit'))\n    myChart1.setOption(this.option1)\n  },\n  computed: {\n    ...mapState(['goods'])\n  },\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 5,\n      option: {\n        tooltip: {},\n        xAxis: {\n          data: ['A', 'B', 'C', 'D', 'E'],\n          name: '商品编号'\n        },\n        yAxis: {\n          name: '销售量'\n        },\n        series: [\n          {\n            name: '销售量',\n            data: [0, 0, 0, 0, 0],\n            type: 'bar',\n            itemStyle: {\n              color: '#91cc75',\n              shadowColor: '#91cc75',\n              opacity: 0.5\n            }\n          }\n        ]\n      },\n      option1: {\n        tooltip: {},\n        xAxis: {\n          data: ['A', 'B', 'C', 'D', 'E'],\n          name: '商品编号'\n        },\n        yAxis: {\n          name: '营业额/元'\n        },\n        series: [\n          {\n            name: '营业额',\n            data: [0, 0, 0, 0, 0],\n            type: 'bar',\n            itemStyle: {\n              color: 'rgb(84,112,198)',\n              shadowColor: '#91cc75',\n              opacity: 0.5\n            }\n          }\n        ]\n      }\n    }\n  },\n  methods: {\n    handleCurrentChange(val) {\n      this.currentPage = val\n      const x = ['', '', '', '', '']\n      const y = [0, 0, 0, 0, 0]\n      const y1 = [0, 0, 0, 0, 0]\n      // 在goods数组中截取目标下标范围内的表格信息\n      for (let i = (this.currentPage - 1) * this.pageSize, j = 0; i < Math.min(this.currentPage * this.pageSize, this.goods.length); i++, j++) {\n        x[j] = this.goods[i].goodsname\n        y[j] = this.goods[i].sold_num\n        y1[j] = (this.goods[i].sold_num * this.goods[i].price).toFixed(2)\n      }\n      this.option.xAxis.data = x\n      this.option1.xAxis.data = x\n      this.option.series[0].data = y\n      this.option1.series[0].data = y1\n      // 重新渲染chart\n      const myChart = echarts.init(document.querySelector('.chart'))\n      myChart.setOption(this.option)\n      const myChart1 = echarts.init(document.querySelector('.profit'))\n      myChart1.setOption(this.option1)\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.dataChart {\n  .block {\n    margin-top: 20px;\n    text-align: center;\n  }\n\n  .chart,\n  .profit {\n    margin: 0 auto;\n    width: 80%;\n    height: 400px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}