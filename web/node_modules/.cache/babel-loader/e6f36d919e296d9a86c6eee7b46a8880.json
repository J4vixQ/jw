{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nexport default {\n  props: ['id'],\n  computed: {\n    ...mapState(['myinfo', 'goods'])\n  },\n  data() {\n    return {\n      info: {},\n      num: 1,\n      formInline: {\n        addr: ''\n      }\n    };\n  },\n  components: {\n    PageHeader: () => import('../components/PageHeader.vue')\n  },\n  created() {\n    if (this.myinfo === null) {\n      this.$router.push('/login');\n    }\n    const numId = this.id * 1;\n    for (let i = 0; i < this.goods.length; i++) {\n      if (this.goods[i].goodsname === numId) {\n        this.info = this.goods[i];\n        break;\n      }\n    }\n  },\n  methods: {\n    async pay() {\n      // 完备性检验, 验证是否处于登录状态\n      if (localStorage.getItem('token') === null) {\n        this.$router.replace('/login');\n        return;\n      }\n\n      // 验证表单信息是否全部填写\n      if (this.formInline.addr === '') {\n        alert('请填写您的收货地址!');\n        return;\n      }\n\n      // 发送post请求, 请求进行交易, 参数包括token、商品编号、商品名称、购买数量、收货地址\n      const {\n        data\n      } = await this.$http({\n        method: 'POST',\n        url: '/soldgoods',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        data: {\n          goodsname: this.id,\n          description: this.info.description,\n          num: this.num,\n          addr: this.formInline.addr\n        }\n      });\n\n      // 展示后端处理结果\n      const {\n        status,\n        msg\n      } = data;\n      alert(msg);\n\n      // 若交易成功, 跳转到购物主界面\n      if (status === 200) {\n        this.$router.push('/');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAyCA;AACA;EACAA;EACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;EACA;EACAC;IACA;MACA;IACA;IACA;IACA;MACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;MACA;MACA;QACA;QACA;MACA;;MAEA;MACA;QACAC;QACA;MACA;;MAEA;MACA;QAAAT;MAAA;QACAU;QACAC;QACAC;UACAC;QACA;QACAb;UACAc;UACAC;UACAb;UACAE;QACA;MACA;;MAEA;MACA;QAAAY;QAAAC;MAAA;MACAR;;MAEA;MACA;QACA;MACA;IACA;EACA;AACA","names":["props","computed","data","info","num","formInline","addr","components","PageHeader","created","methods","alert","method","url","headers","Authorization","goodsname","description","status","msg"],"sourceRoot":"src/views","sources":["GoodsDetail.vue"],"sourcesContent":["<template>\n  <div class=\"detail\">\n    <PageHeader>\n      <i class=\"el-icon-s-home\" style=\"color:red\"></i> <i id=\"tag\" @click=\"$router.push('/')\">购物首页&nbsp;&nbsp;&nbsp;</i>\n    </PageHeader>\n    <div class=\"box\">\n      <div class=\"subbox\">\n        <div class=\"left\">\n          <img :src=\"'http://127.0.0.1/goods/' + id + '.png'\" alt=\"\">\n        </div>\n        <div class=\"right\">\n          <h3>{{ info.description }}</h3>\n          <p style=\"font-size:14px;color:rgba(0,0,0,.4);line-height: 22px;\">销售量: {{ info.sold_num }}</p>\n          <p style=\"color:rgb(255, 79, 0);font-size: 16px;line-height: 34px;\">¥ <em\n              style=\"font-style: normal;font-size: 28px\">{{\n                  info.price\n              }}</em></p>\n          <p>\n            <el-form :model=\"formInline\" class=\"demo-form-inline\">\n              <el-form-item label=\"配送:\">\n                <el-input v-model=\"formInline.addr\" placeholder=\"收货地址\" style=\"width:80%\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"数量:\">\n                <el-input-number v-model=\"num\" :min=\"1\" :max=\"9999\" size=\"small\">\n                </el-input-number>\n              </el-form-item>\n              <el-form-item label=\"总价:\">\n                <p style=\"color:rgb(255, 79, 0);font-size: 16px;line-height: 34px;\">¥\n                  <em style=\"font-style: normal;font-size: 28px\">{{ (info.price * num).toFixed(2) }}</em>\n                </p>\n              </el-form-item>\n            </el-form>\n          </p>\n          <button id=\"btn\" @click=\"pay\">立即购买</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  props: ['id'],\n  computed: {\n    ...mapState(['myinfo', 'goods'])\n  },\n  data() {\n    return {\n      info: {},\n      num: 1,\n      formInline: {\n        addr: ''\n      }\n    }\n  },\n  components: {\n    PageHeader: () => import('../components/PageHeader.vue')\n  },\n  created() {\n    if (this.myinfo === null) {\n      this.$router.push('/login')\n    }\n    const numId = this.id * 1\n    for (let i = 0; i < this.goods.length; i++) {\n      if (this.goods[i].goodsname === numId) {\n        this.info = this.goods[i]\n        break\n      }\n    }\n  },\n  methods: {\n    async pay() {\n      // 完备性检验, 验证是否处于登录状态\n      if (localStorage.getItem('token') === null) {\n        this.$router.replace('/login')\n        return\n      }\n\n      // 验证表单信息是否全部填写\n      if (this.formInline.addr === '') {\n        alert('请填写您的收货地址!')\n        return\n      }\n\n      // 发送post请求, 请求进行交易, 参数包括token、商品编号、商品名称、购买数量、收货地址\n      const { data } = await this.$http({\n        method: 'POST',\n        url: '/soldgoods',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        data: {\n          goodsname: this.id,\n          description: this.info.description,\n          num: this.num,\n          addr: this.formInline.addr\n        }\n      })\n\n      // 展示后端处理结果\n      const { status, msg } = data\n      alert(msg)\n\n      // 若交易成功, 跳转到购物主界面\n      if (status === 200) {\n        this.$router.push('/')\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.detail {\n  min-width: 1200px;\n\n  #tag {\n    font-style: normal;\n\n    &:hover {\n      color: rgb(255, 0, 54);\n      cursor: pointer;\n    }\n  }\n\n  .box {\n    background-color: rgb(233, 223, 217);\n    padding: 30px 5%;\n    min-height: calc(100vh - 33px);\n\n    .subbox {\n      background-color: #fff;\n      border-radius: 20px;\n      display: flex;\n      padding: 3%;\n      align-items: center;\n\n      .left {\n        flex: 1;\n        padding-left: 30px;\n\n        img {\n          width: 80%;\n          border-radius: 20px;\n        }\n      }\n\n      .right {\n        flex: 2;\n\n        #btn {\n          background: linear-gradient(90deg, rgb(255, 119, 0), rgb(255, 73, 0));\n          box-shadow: rgb(255 119 0 / 20%) 0px 9px 13px 0px;\n          vertical-align: top;\n          border-radius: 34px;\n          padding: 0 60px;\n          outline: 0;\n          font-family: 'PingFang SC';\n          border: 0;\n          cursor: pointer;\n          height: 48px;\n          line-height: 22px;\n          text-align: center;\n          font-size: 16px;\n          font-weight: bold;\n          color: rgb(255, 255, 255);\n        }\n\n        h3 {\n          font-size: 20px;\n          line-height: 28px;\n        }\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}